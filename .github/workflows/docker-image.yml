name: Build and Release DevContainer Image

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release Dry Run
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release --dry-run --no-ci > semantic-output.txt 2>&1 || true
          cat semantic-output.txt
          NEW_VERSION=$(grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+' semantic-output.txt || echo "")
          if [ -z "$NEW_VERSION" ]; then
            echo "No new release required"
            echo "skip_release=true" >> $GITHUB_OUTPUT
          else
            echo "New version: $NEW_VERSION"
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
            echo "version_tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
            echo "skip_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Fix workspace permissions
        if: steps.semantic.outputs.skip_release != 'true'
        run: sudo chown -R $(id -u):$(id -g) "$GITHUB_WORKSPACE"

      - uses: docker/setup-qemu-action@v2
        if: steps.semantic.outputs.skip_release != 'true'

      - uses: docker/setup-buildx-action@v2
        if: steps.semantic.outputs.skip_release != 'true'
        with:
          driver-opts: image=moby/buildkit:latest

      - uses: docker/login-action@v2
        if: steps.semantic.outputs.skip_release != 'true'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image with cache
        if: steps.semantic.outputs.skip_release != 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .devcontainer/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/config-base:${{ steps.semantic.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/config-base:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/config-base:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/config-base:cache,mode=max
          no-cache: true

      - name: Export tool versions
        if: steps.semantic.outputs.skip_release != 'true'
        working-directory: ${{ github.workspace }}
        run: |
          docker run --rm -v "$PWD":/workspace -w /workspace ghcr.io/${{ github.repository_owner }}/config-base:latest bash -lc 'brew --version; terraform --version; jq --version > devcontainer-info.txt'

      - uses: actions/upload-artifact@v4
        if: steps.semantic.outputs.skip_release != 'true'
        with:
          name: devcontainer-info
          path: devcontainer-info.txt

      - name: Create Release
        if: steps.semantic.outputs.skip_release != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release --no-ci
