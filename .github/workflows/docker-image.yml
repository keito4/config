name: Build and Release DevContainer Image

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install --save-dev semantic-release @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/github @semantic-release/exec
          npx semantic-release --dry-run > semantic-output.txt 2>&1 || true
          NEW_VERSION=$(grep -oP 'Published release \K[0-9]+\.[0-9]+\.[0-9]+' semantic-output.txt || echo "")
          if [ -z "$NEW_VERSION" ]; then
            echo "skip_release=true" >> $GITHUB_OUTPUT
          else
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
            echo "version_tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
            echo "skip_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Prepare bind mounts
        if: steps.semantic.outputs.skip_release != 'true'
        run: mkdir -p "$HOME/.claude"

      - uses: docker/setup-qemu-action@v2
        if: steps.semantic.outputs.skip_release != 'true'

      - uses: docker/setup-buildx-action@v2
        if: steps.semantic.outputs.skip_release != 'true'

      - uses: docker/login-action@v2
        if: steps.semantic.outputs.skip_release != 'true'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pre-build Dev Container image
        if: steps.semantic.outputs.skip_release != 'true'
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/${{ github.repository_owner }}/config-base
          imageTag: ${{ steps.semantic.outputs.version }},latest
          platform: linux/amd64,linux/arm64
          push: always
          runCmd: echo done

      - name: Export tool versions
        if: steps.semantic.outputs.skip_release != 'true'
        run: |
          docker run --rm ghcr.io/${{ github.repository_owner }}/config-base:latest bash -lc 'brew --version; terraform --version; jq --version' > devcontainer-info.txt

      - uses: actions/upload-artifact@v4
        if: steps.semantic.outputs.skip_release != 'true'
        with:
          name: devcontainer-info
          path: devcontainer-info.txt

      - name: Create Release
        if: steps.semantic.outputs.skip_release != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release
